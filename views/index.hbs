<html __fvdsurfcanyoninserted="1"
    class=" clickberry-extension clickberry-extension-standalone clickberry-extension clickberry-extension-standalone clickberry-extension clickberry-extension-standalone">

<head>
    <meta charset="UTF-8">
    <title>Happy Birthday</title>
    <style>
        /* If you can't see it just hit space in here*/
        body {
            font-family: 'Wendy One', sans-serif;
        }

        body {
            background-image: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 100, color-stop(0%, #374566), color-stop(100%, #010203));
            background-image: -webkit-radial-gradient(#374566, #010203);
            background-image: -moz-radial-gradient(#374566, #010203);
            background-image: -o-radial-gradient(#374566, #010203);
            background-image: radial-gradient(#374566, #010203);
        }

        span {
            text-transform: uppercase;
        }

        .container {
            width: 800px;
            height: 420px;
            padding: 10px;
            margin: 0 auto;
            margin-top: 300px;
            position: relative;
        }

        .balloon {
            width: 738px;
            margin: 0 auto;
            padding-top: 30px;
            position: relative;
        }

        .balloon>div {
            width: 104px;
            height: 140px;
            background: rgba(182, 15, 97, 0.9);
            border-radius: 0;
            border-radius: 80% 80% 80% 80%;
            margin: 0 auto;
            position: absolute;
            padding: 10px;
            box-shadow: inset 17px 7px 10px rgba(182, 15, 97, 0.9);
            -webkit-transform-origin: bottom center;
            transform-origin: center;
        }

        .balloon>div:nth-child(1) {
            background: rgba(182, 15, 97, 0.9);
            left: 0;
            box-shadow: inset 10px 10px 10px rgba(135, 11, 72, 0.9);
            -webkit-animation: balloon1 6s ease-in-out infinite;
            -moz-animation: balloon1 6s ease-in-out infinite;
            -o-animation: balloon1 6s ease-in-out infinite;
            animation: balloon1 6s ease-in-out infinite;
        }

        .balloon>div:nth-child(1):before {
            color: rgba(182, 15, 97, 0.9);
        }

        .balloon>div:nth-child(2) {
            background: rgba(242, 112, 45, 0.9);
            left: 120px;
            box-shadow: inset 10px 10px 10px rgba(222, 85, 14, 0.9);
            -webkit-animation: balloon2 6s ease-in-out infinite;
            -moz-animation: balloon2 6s ease-in-out infinite;
            -o-animation: balloon2 6s ease-in-out infinite;
            animation: balloon2 6s ease-in-out infinite;
        }

        .balloon>div:nth-child(2):before {
            color: rgba(242, 112, 45, 0.9);
        }

        .balloon>div:nth-child(3) {
            background: rgba(45, 181, 167, 0.9);
            left: 240px;
            box-shadow: inset 10px 10px 10px rgba(35, 140, 129, 0.9);
            -webkit-animation: balloon4 6s ease-in-out infinite;
            -moz-animation: balloon4 6s ease-in-out infinite;
            -o-animation: balloon4 6s ease-in-out infinite;
            animation: balloon4 6s ease-in-out infinite;
        }

        .balloon>div:nth-child(3):before {
            color: rgba(45, 181, 167, 0.9);
        }

        .balloon>div:nth-child(4) {
            background: rgba(190, 61, 244, 0.9);
            left: 360px;
            box-shadow: inset 10px 10px 10px rgba(173, 14, 240, 0.9);
            -webkit-animation: balloon1 5s ease-in-out infinite;
            -moz-animation: balloon1 5s ease-in-out infinite;
            -o-animation: balloon1 5s ease-in-out infinite;
            animation: balloon1 5s ease-in-out infinite;
        }

        .balloon>div:nth-child(4):before {
            color: rgba(190, 61, 244, 0.9);
        }

        .balloon>div:nth-child(5) {
            background: rgba(180, 224, 67, 0.9);
            left: 480px;
            box-shadow: inset 10px 10px 10px rgba(158, 206, 34, 0.9);
            -webkit-animation: balloon3 5s ease-in-out infinite;
            -moz-animation: balloon3 5s ease-in-out infinite;
            -o-animation: balloon3 5s ease-in-out infinite;
            animation: balloon3 5s ease-in-out infinite;
        }

        .balloon>div:nth-child(5):before {
            color: rgba(180, 224, 67, 0.9);
        }

        .balloon>div:nth-child(6) {
            background: rgba(242, 194, 58, 0.9);
            left: 600px;
            box-shadow: inset 10px 10px 10px rgba(234, 177, 15, 0.9);
            -webkit-animation: balloon2 3s ease-in-out infinite;
            -moz-animation: balloon2 3s ease-in-out infinite;
            -o-animation: balloon2 3s ease-in-out infinite;
            animation: balloon2 3s ease-in-out infinite;
        }

        .balloon>div:nth-child(6):before {
            color: rgba(242, 194, 58, 0.9);
        }

        .balloon>div:before {
            color: rgba(182, 15, 97, 0.9);
            position: absolute;
            bottom: -11px;
            left: 52px;
            content: "â–²";
            font-size: 1em;
        }

        span {
            font-size: 4.8em;
            color: white;
            position: relative;
            top: 30px;
            left: 50%;
            margin-left: -27px;
        }

        /*BALLOON 1 4*/
        @-webkit-keyframes balloon1 {

            0%,
            100% {
                -webkit-transform: translateY(0) rotate(-6deg);
            }

            50% {
                -webkit-transform: translateY(-20px) rotate(8deg);
            }
        }

        @-moz-keyframes balloon1 {

            0%,
            100% {
                -moz-transform: translateY(0) rotate(-6deg);
            }

            50% {
                -moz-transform: translateY(-20px) rotate(8deg);
            }
        }

        @-o-keyframes balloon1 {

            0%,
            100% {
                -o-transform: translateY(0) rotate(-6deg);
            }

            50% {
                -o-transform: translateY(-20px) rotate(8deg);
            }
        }

        @keyframes balloon1 {

            0%,
            100% {
                transform: translateY(0) rotate(-6deg);
            }

            50% {
                transform: translateY(-20px) rotate(8deg);
            }
        }

        /* BAllOON 2 5*/
        @-webkit-keyframes balloon2 {

            0%,
            100% {
                -webkit-transform: translateY(0) rotate(6eg);
            }

            50% {
                -webkit-transform: translateY(-30px) rotate(-8deg);
            }
        }

        @-moz-keyframes balloon2 {

            0%,
            100% {
                -moz-transform: translateY(0) rotate(6deg);
            }

            50% {
                -moz-transform: translateY(-30px) rotate(-8deg);
            }
        }

        @-o-keyframes balloon2 {

            0%,
            100% {
                -o-transform: translateY(0) rotate(6deg);
            }

            50% {
                -o-transform: translateY(-30px) rotate(-8deg);
            }
        }

        @keyframes balloon2 {

            0%,
            100% {
                transform: translateY(0) rotate(6deg);
            }

            50% {
                transform: translateY(-30px) rotate(-8deg);
            }
        }

        /* BAllOON 0*/
        @-webkit-keyframes balloon3 {

            0%,
            100% {
                -webkit-transform: translate(0, -10px) rotate(6eg);
            }

            50% {
                -webkit-transform: translate(-20px, 30px) rotate(-8deg);
            }
        }

        @-moz-keyframes balloon3 {

            0%,
            100% {
                -moz-transform: translate(0, -10px) rotate(6eg);
            }

            50% {
                -moz-transform: translate(-20px, 30px) rotate(-8deg);
            }
        }

        @-o-keyframes balloon3 {

            0%,
            100% {
                -o-transform: translate(0, -10px) rotate(6eg);
            }

            50% {
                -o-transform: translate(-20px, 30px) rotate(-8deg);
            }
        }

        @keyframes balloon3 {

            0%,
            100% {
                transform: translate(0, -10px) rotate(6eg);
            }

            50% {
                transform: translate(-20px, 30px) rotate(-8deg);
            }
        }

        /* BAllOON 3*/
        @-webkit-keyframes balloon4 {

            0%,
            100% {
                -webkit-transform: translate(10px, -10px) rotate(-8eg);
            }

            50% {
                -webkit-transform: translate(-15px, 20px) rotate(10deg);
            }
        }

        @-moz-keyframes balloon4 {

            0%,
            100% {
                -moz-transform: translate(10px, -10px) rotate(-8eg);
            }

            50% {
                -moz-transform: translate(-15px, 10px) rotate(10deg);
            }
        }

        @-o-keyframes balloon4 {

            0%,
            100% {
                -o-transform: translate(10px, -10px) rotate(-8eg);
            }

            50% {
                -o-transform: translate(-15px, 10px) rotate(10deg);
            }
        }

        @keyframes balloon4 {

            0%,
            100% {
                transform: translate(10px, -10px) rotate(-8eg);
            }

            50% {
                transform: translate(-15px, 10px) rotate(10deg);
            }
        }

        h1 {
            position: relative;
            top: 200px;
            text-align: center;
            color: white;
            font-size: 3.5em;
        }
        .name{
         -webkit-animation: kavya 6s ease-in-out infinite;
            -moz-animation: kavya 6s ease-in-out infinite;
            -o-animation: kavya 6s ease-in-out infinite;
            animation: kavya 6s ease-in-out infinite;
            font-size: 100px;

        }
       
        @keyframes kavya{
           0%{
               color: rgb(235, 129, 203);
               
               transform: translate(-50deg, -50deg);
           }
           50%{
               color: green;
              
               transform: translate(-90deg,-90deg);
           }
           100%{
               color:white;
               transform:rotateY(-45deg);
               transform: translate(0deg,0deg);
           }
        }
        
               body {
  margin: 0;
  background: #020202;
  cursor: crosshair;
}
canvas{
display:block;

 }

.set{
    margin-top: 180px;
    position: relative;
    width: 100%;
   padding-left: 60px;
    height: 600px; 
}
.image1{
    margin-left: 90px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 100px;
}
.image2{
    
    margin-left: 340px;
    margin-top: 30px;
    margin-bottom: 30px;
}
.image3{
    margin-left: 90px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 100px;
}
#btn{
    position: absolute;
    left: 45%;
    color: white;
    top: 145%;
    display: block;
    padding: 10px 25px;
    background-color: green;
    border: none;
}
audio{
    margin-left: 350px;
    margin-top: 350px;
    background-color: green;
}
.create{
    font-size: 20px;
    color: white;
    float: right;
}






    </style>
    
    <script>
        window.open = function () { };
        window.print = function () { };
        // Support hover state for mobile.
        if (false) {
            window.ontouchstart = function () { };
        }
    </script>
    <script type="text/javascript" src="chrome-extension://bfbmjmiodbnnpllbbbfblcplfjjepjdn/js/injected.js"></script>
    <meta content="clickberry-extension-here">
    <meta content="clickberry-extension-here">
    <style type="text/css"></style>
    <style type="text/css"></style>
    <style type="text/css"></style>
    <style type="text/css"></style>
    <script type="text/javascript" src="chrome-extension://bfbmjmiodbnnpllbbbfblcplfjjepjdn/js/injected.js"></script>
    <meta content="clickberry-extension-here">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
</head>

<body>
    <link href="https://fonts.googleapis.com/css?family=Wendy+One" rel="stylesheet" type="text/css">
    
    <div class="container">
        
        <div class="balloon">
           
            <div><span>â˜º</span>
            </div>
            <div><span>B</span>
            </div>
            <div><span>D</span>
            </div>
            <div><span>A</span>
            </div>
            <div><span>Y</span>
            </div>
            <div><span>!</span>
            </div>
        </div>

        <h1 class="name">Happy Birthday</h1>
        <h1 class="name">Tweety....</h1>
        <canvas id="birthday"></canvas>
 </div>
<div class="set">
 <div class="image1"> 
     <img src="/img/1.jpeg"  width="250px" height="250px">
    <img src="/img/2.jpeg" width="250px" height="250px">


 </div>
 <div class="image2">
     <img src="/img/3.jpeg"  width="250px" height="250px">
 </div>
<div class="image3">
    <img src="/img/5.jpeg" width="250px" height="250px">
    <img src="/img/8.jpeg" width="250px" height="250px">
</div>

</div>
<audio controls>
    
    <source src="/cutsong.mp3" type="audio/mpeg">
    
</audio>
<div class="create">
    <h1>Created by => Ashish</h1>
    </div>

    
    
    
    
    <script>

    </script>
    <script>
        if (document.location.search.match(/type=embed/gi)) {
            window.parent.postMessage('resize', "*");
        }
    </script>
    
        <script>
           
                 const PI2 = Math.PI * 2
                const random = (min, max) => Math.random() * (max - min + 1) + min | 0
                const timestamp = _ => new Date().getTime()

                // container
                class Birthday {
                    constructor() {
                        this.resize()

                        // create a lovely place to store the firework
                        this.fireworks = []
                        this.counter = 0

                    }

                    resize() {
                        this.width = canvas.width = window.innerWidth
                        let center = this.width / 2 | 0
                        this.spawnA = center - center / 4 | 0
                        this.spawnB = center + center / 4 | 0

                        this.height = canvas.height = window.innerHeight
                        this.spawnC = this.height * .1
                        this.spawnD = this.height * .5

                    }

                    onClick(evt) {
                        let x = evt.clientX || evt.touches && evt.touches[0].pageX
                        let y = evt.clientY || evt.touches && evt.touches[0].pageY

                        let count = random(3, 5)
                        for (let i = 0; i < count; i++) this.fireworks.push(new Firework(
                            random(this.spawnA, this.spawnB),
                            this.height,
                            x,
                            y,
                            random(0, 260),
                            random(30, 110)))

                        this.counter = -1

                    }

                    update(delta) {
                        ctx.globalCompositeOperation = 'hard-light'
                        ctx.fillStyle = `rgba(20,20,20,${7 * delta})`
                        ctx.fillRect(0, 0, this.width, this.height)

                        ctx.globalCompositeOperation = 'lighter'
                        for (let firework of this.fireworks) firework.update(delta)

                        // if enough time passed... create new new firework
                        this.counter += delta * 3 // each second
                        if (this.counter >= 1) {
                            this.fireworks.push(new Firework(
                                random(this.spawnA, this.spawnB),
                                this.height,
                                random(0, this.width),
                                random(this.spawnC, this.spawnD),
                                random(0, 360),
                                random(30, 110)))
                            this.counter = 0
                        }

                        // remove the dead fireworks
                        if (this.fireworks.length > 1000) this.fireworks = this.fireworks.filter(firework => !firework.dead)

                    }
                }

                class Firework {
                    constructor(x, y, targetX, targetY, shade, offsprings) {
                        this.dead = false
                        this.offsprings = offsprings

                        this.x = x
                        this.y = y
                        this.targetX = targetX
                        this.targetY = targetY

                        this.shade = shade
                        this.history = []
                    }
                    update(delta) {
                        if (this.dead) return

                        let xDiff = this.targetX - this.x
                        let yDiff = this.targetY - this.y
                        if (Math.abs(xDiff) > 3 || Math.abs(yDiff) > 3) { // is still moving
                            this.x += xDiff * 2 * delta
                            this.y += yDiff * 2 * delta

                            this.history.push({
                                x: this.x,
                                y: this.y
                            })

                            if (this.history.length > 20) this.history.shift()

                        } else {
                            if (this.offsprings && !this.madeChilds) {

                                let babies = this.offsprings / 2
                                for (let i = 0; i < babies; i++) {
                                    let targetX = this.x + this.offsprings * Math.cos(PI2 * i / babies) | 0
                                    let targetY = this.y + this.offsprings * Math.sin(PI2 * i / babies) | 0

                                    birthday.fireworks.push(new Firework(this.x, this.y, targetX, targetY, this.shade, 0))

                                }

                            }
                            this.madeChilds = true
                            this.history.shift()
                        }

                        if (this.history.length === 0) this.dead = true
                        else if (this.offsprings) {
                            for (let i = 0; this.history.length > i; i++) {
                                let point = this.history[i]
                                ctx.beginPath()
                                ctx.fillStyle = 'hsl(' + this.shade + ',100%,' + i + '%)'
                                ctx.arc(point.x, point.y, 1, 0, PI2, false)
                                ctx.fill()
                            }
                        } else {
                            ctx.beginPath()
                            ctx.fillStyle = 'hsl(' + this.shade + ',100%,50%)'
                            ctx.arc(this.x, this.y, 1, 0, PI2, false)
                            ctx.fill()
                        }

                    }
                }

                let canvas = document.getElementById('birthday')
                let ctx = canvas.getContext('2d')

                let then = timestamp()

                let birthday = new Birthday
                window.onresize = () => birthday.resize()
                document.onclick = evt => birthday.onClick(evt)
                document.ontouchstart = evt => birthday.onClick(evt)

                    ; (function loop() {
                        requestAnimationFrame(loop)

                        let now = timestamp()
                        let delta = now - then

                        then = now
                        birthday.update(delta / 1000)


                    })()

          
                // helper functions
               
    </script>
   


</body>

</html>